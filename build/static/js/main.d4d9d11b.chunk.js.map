{"version":3,"sources":["components/score-table.js","App.js","reportWebVitals.js","index.js"],"names":["Score_table","props","state","home_score","away_score","playing","actual_playing","country_1","country_2","new_matches","localStorage","getItem","this","setState","JSON","parse","e","currentTarget","id","new_match_played","country_name","score","total","match","prevState","arrayMatches","sort","a","b","setItem","stringify","country","value","document","getElementById","childNodes","forEach","option","text","setAttribute","disabled","removeAttribute","setStateStart","first_country","second_country","__this","className","Button","variant","onClick","bind","Form","Control","as","size","onChange","getTeam","custom","start","finish","length","map","flag","key","React","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.d4d9d11b.chunk.js","sourcesContent":["import React from 'react';\nimport Button from 'react-bootstrap/Button'\nimport Form from 'react-bootstrap/Form'\n\nclass Score_table extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            home_score : 0,\n            away_score : 0,\n            playing : false,\n            actual_playing : {\n                country_1 : 'Mexico',\n                country_2 : 'Canada'\n            },\n            new_matches : []\n        }\n    }\n    componentDidMount(){\n        if(localStorage.getItem(\"matches_played\")){\n            this.setState({\n                new_matches : JSON.parse(localStorage.getItem(\"matches_played\"))\n            })\n        }\n        // localStorage.removeItem(\"matches_played\");\n    }\n    score(e){\n        if(e.currentTarget.id === 'score_home'){\n            this.setState({\n                home_score : this.state.home_score + 1\n            })\n        } else{\n            this.setState({\n                away_score : this.state.away_score + 1\n            })\n        }\n    }\n    finish(){\n        let new_match_played = {\n            country_1 : {\n                country_name : this.state.actual_playing.country_1,\n                score : this.state.home_score,\n            },\n            country_2 : {\n                country_name : this.state.actual_playing.country_2,\n                score : this.state.away_score\n            },\n            total : this.state.home_score + this.state.away_score,\n            match : this.state.actual_playing.country_1 + this.state.actual_playing.country_2\n        }\n\n        this.setState(prevState => ({\n            playing : false,\n            home_score : 0,\n            away_score : 0,\n            new_matches : [\n                ...prevState.new_matches, new_match_played\n            ]\n        }), () => {\n            let arrayMatches = []\n            arrayMatches = this.state.new_matches.sort( (a,b) => {\n                if(b.total === a.total){\n                    a.total++\n                }\n                return b.total - a.total\n            })\n            this.setState({\n                new_matches : arrayMatches\n            }, () =>{\n                localStorage.setItem('matches_played', JSON.stringify(this.state.new_matches))\n            })\n        })\n        \n\n    }\n    getTeam(e){\n        let id = e.currentTarget.id;\n        \n        if(id === 'first_country'){\n            let country = e.currentTarget.value;\n            document.getElementById('second_country').childNodes.forEach(option => {\n                if(option.text === country){\n                    option.setAttribute('disabled', true)\n                } else{\n                    option.disabled = false\n                }\n            });\n\n        } else{\n            let country = e.currentTarget.value;\n            document.getElementById('first_country').childNodes.forEach(option => {\n                if(option.text === country){\n                    option.setAttribute('disabled', true)\n                } else{\n                    option.removeAttribute('disabled', false)\n                }\n            });\n        }\n    }\n    start(){\n        let _this = this;\n        if(document.getElementById('first_country')){\n            let first_country = document.getElementById('first_country').value\n            let second_country = document.getElementById('second_country').value\n            setStateStart(first_country,second_country,_this)\n        } else{\n            let first_country = this.state.actual_playing.country_1\n            let second_country = this.state.actual_playing.country_2\n            setStateStart(first_country,second_country,_this)\n        }\n\n        function setStateStart(first_country,second_country, __this){\n            __this.setState({\n                playing : true,\n                home_score : 0,\n                away_score : 0,\n                actual_playing : {\n                    country_1 : first_country,\n                    country_2 : second_country\n                }\n            })\n        }\n    }\n    render(){\n        return(\n            <div className=\"score\">\n                <h1>Score board</h1>\n                {this.state.playing}\n                <div className=\"board\">\n                    { this.state.playing === true ?\n                    <div className=\"cont\">\n                        <h2>Now playing</h2>\n                        <div className=\"locals\">\n                            <div className=\"home\">\n                                {this.state.actual_playing.country_1}\n                                <div className=\"score_match\">\n                                    {this.state.home_score}\n                                    <Button variant=\"light\" id='score_home' onClick={this.score.bind(this)}>Score</Button>\n                                </div>\n                            </div>\n                            <div className=\"away\">\n                                {this.state.actual_playing.country_2}\n                                <div className=\"score_match\">\n                                    {this.state.away_score}\n                                    <Button variant=\"light\" id='score_away' onClick={this.score.bind(this)}>Score</Button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>: ''}\n                    {this.state.playing === false ?\n                    <div className=\"cont\">\n                        <Form.Control as=\"select\" size=\"lg\" id='first_country' onChange={this.getTeam.bind(this)} custom>\n                            <option disabled>México</option>\n                            <option>Canada</option>\n                            <option>Spain</option>\n                            <option>Brazil</option>\n                            <option>Germany</option>\n                            <option>France</option>\n                            <option>Uruguay</option>\n                            <option>Italy</option>\n                            <option>Argentina</option>\n                            <option>Australia</option>\n                        </Form.Control>\n                        <Form.Control as=\"select\" size=\"lg\" id='second_country' onChange={this.getTeam.bind(this)} custom>\n                            <option disabled>Canada</option>\n                            <option>México</option>\n                            <option>Spain</option>\n                            <option>Brazil</option>\n                            <option>Germany</option>\n                            <option>France</option>\n                            <option>Uruguay</option>\n                            <option>Italy</option>\n                            <option>Argentina</option>\n                            <option>Australia</option>\n                        </Form.Control>\n                    </div>\n                    : ''}\n                    \n                    {this.state.playing === false \n                        ?<Button className='btn-dark' id='start_button' variant=\"light\" onClick={this.start.bind(this)}>Start match</Button>\n                        :<Button className='btn-dark' id='finish_button' variant=\"light\" onClick={this.finish.bind(this)}>Finish match</Button>\n                    }\n                    \n                </div>\n                <div className=\"cont\">\n                    {this.state.new_matches.length > 0 &&\n                        this.state.new_matches.map( \n                            (flag, key) => {\n                                return(\n                                    <div key={flag} className=\"final_core\" id={key}>\n                                        <div className=\"final_score\">\n                                            <div className=\"box_score\">\n                                                {flag.country_1.country_name}\n                                                <span>{flag.country_1.score}</span>\n                                            </div>\n                                            <span>VS</span>\n                                            <div className=\"box_score\">\n                                                <span>{flag.country_2.score}</span>\n                                                {flag.country_2.country_name}\n                                            </div>\n                                        </div>\n                                    </div>\n                                )\n                            }\n                        )\n                    }\n                </div>\n            </div>\n        )\n    }\n}\nexport default Score_table;","import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport ScoreTable from './components/score-table'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <ScoreTable></ScoreTable>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}